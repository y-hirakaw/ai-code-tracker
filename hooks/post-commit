#!/bin/bash

# AI Code Tracker - Git Post-Commit Hook
# Updates tracking metrics after each commit

set -e

# Get project directory (Git hook doesn't have CLAUDE_PROJECT_DIR)
PROJECT_DIR="$(git rev-parse --show-toplevel)"
AICT_BIN="$PROJECT_DIR/bin/aict"

# Check if aict binary exists
if [[ ! -f "$AICT_BIN" ]]; then
    exit 0
fi

# Check if AI Code Tracker is initialized
if [[ ! -d "$PROJECT_DIR/.ai_code_tracking" ]]; then
    exit 0
fi

# Get commit information
COMMIT_HASH=$(git rev-parse HEAD)
COMMIT_AUTHOR=$(git log -1 --format='%an')
COMMIT_MESSAGE=$(git log -1 --format='%s')

echo "AI Code Tracker: Post-commit analysis for $COMMIT_HASH" >&2
echo "Author: $COMMIT_AUTHOR" >&2
echo "Message: $COMMIT_MESSAGE" >&2

# Display current tracking status
"$AICT_BIN" report >&2

# Archive current metrics with commit info
TIMESTAMP=$(date +"%Y%m%d_%H%M%S")
METRICS_FILE="$PROJECT_DIR/.ai_code_tracking/metrics/current.json"
ARCHIVE_FILE="$PROJECT_DIR/.ai_code_tracking/metrics/archive/commit_${COMMIT_HASH:0:8}_${TIMESTAMP}.json"

if [[ -f "$METRICS_FILE" ]]; then
    mkdir -p "$(dirname "$ARCHIVE_FILE")"
    # Add commit info to archived metrics
    jq --arg commit "$COMMIT_HASH" --arg author "$COMMIT_AUTHOR" --arg message "$COMMIT_MESSAGE" \
       '. + {"commit_hash": $commit, "commit_author": $author, "commit_message": $message}' \
       "$METRICS_FILE" > "$ARCHIVE_FILE"
    echo "AI Code Tracker: Metrics archived to $ARCHIVE_FILE" >&2
fi

exit 0